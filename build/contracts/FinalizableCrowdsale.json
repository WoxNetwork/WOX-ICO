{
  "contractName": "FinalizableCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "maxVestingWei",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentTierHardcap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWeiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_vc",
          "type": "address"
        }
      ],
      "name": "addToVC",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_vc",
          "type": "address"
        }
      ],
      "name": "whtielistedAsVC",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_vc",
          "type": "address"
        }
      ],
      "name": "removeFromVC",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentSaleTokenWeiHardcap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentTierTokenWeisPerEth",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasOpened",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minVestingWei",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentTier",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenWeisSold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_weiAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Closed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "toBeClosed",
          "type": "bool"
        }
      ],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b48806100546000396000f30060806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306c36581146101645780631515bc2b1461018f57806318160ddd146101be578063301df9dd146101e9578063313ce567146102145780634042b66f1461023f57806340582f131461026a578063521eb2731461029557806353fe21ad146102ec5780636c02a9311461032f5780636c9789b0146103bf578063715018a6146103ee578063792d7ec3146104055780637b61c320146104605780637d3d6522146104f05780638da5cb5b1461051f5780639fb160aa146105765780639fc2e24f146105b9578063bbe8a466146105e4578063be8eef8e1461060f578063ce7f3a271461063e578063d679677a14610669578063e184a515146106a2578063ec8ac4d8146106cd578063f2fde38b14610717578063f3fef3a31461075a578063fc0c546a146107a7575b600080fd5b34801561017057600080fd5b506101796107fe565b6040518082815260200191505060405180910390f35b34801561019b57600080fd5b506101a46108a0565b604051808215151515815260200191505060405180910390f35b3480156101ca57600080fd5b506101d36108d1565b6040518082815260200191505060405180910390f35b3480156101f557600080fd5b506101fe6108d7565b6040518082815260200191505060405180910390f35b34801561022057600080fd5b50610229610905565b6040518082815260200191505060405180910390f35b34801561024b57600080fd5b5061025461090b565b6040518082815260200191505060405180910390f35b34801561027657600080fd5b5061027f610911565b6040518082815260200191505060405180910390f35b3480156102a157600080fd5b506102aa61091b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f857600080fd5b5061032d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610941565b005b34801561033b57600080fd5b50610344610a62565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610384578082015181840152602081019050610369565b50505050905090810190601f1680156103b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103cb57600080fd5b506103ec600480360381019080803515159060200190929190505050610b00565b005b3480156103fa57600080fd5b50610403610bde565b005b34801561041157600080fd5b50610446600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce3565b604051808215151515815260200191505060405180910390f35b34801561046c57600080fd5b50610475610d00565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104b557808201518184015260208101905061049a565b50505050905090810190601f1680156104e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104fc57600080fd5b50610505610d9e565b604051808215151515815260200191505060405180910390f35b34801561052b57600080fd5b50610534610dad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058257600080fd5b506105b7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd3565b005b3480156105c557600080fd5b506105ce610ef4565b6040518082815260200191505060405180910390f35b3480156105f057600080fd5b506105f9610f57565b6040518082815260200191505060405180910390f35b34801561061b57600080fd5b50610624610f85565b604051808215151515815260200191505060405180910390f35b34801561064a57600080fd5b50610653610fb0565b6040518082815260200191505060405180910390f35b34801561067557600080fd5b5061067e611052565b6040518082600681111561068e57fe5b60ff16815260200191505060405180910390f35b3480156106ae57600080fd5b506106b761108d565b6040518082815260200191505060405180910390f35b610701600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611093565b6040518082815260200191505060405180910390f35b34801561072357600080fd5b50610758600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a1565b005b34801561076657600080fd5b506107a5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112f9565b005b3480156107b357600080fd5b506107bc6113fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000610808610f85565b151561081357600080fd5b61081b6108a0565b15151561082757600080fd5b6000610831611423565b81548110151561083d57fe5b906000526020600020906006020160050160009054906101000a900460ff16151561086757600080fd5b6001600681111561087457fe5b61087c611052565b600681111561088757fe5b141561089757600b54905061089d565b600d5490505b90565b6000806001600080549050038154811015156108b857fe5b9060005260206000209060060201600201544211905090565b60065481565b6000806108e2611423565b8154811015156108ee57fe5b906000526020600020906006020160030154905090565b60075481565b600f5481565b6000600f54905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099d57600080fd5b600060068111156109aa57fe5b60006109b4611423565b8154811015156109c057fe5b906000526020600020906006020160000160009054906101000a900460ff1660068111156109ea57fe5b1480610a405750600260068111156109fe57fe5b6000610a08611423565b815481101515610a1457fe5b906000526020600020906006020160000160009054906101000a900460ff166006811115610a3e57fe5b145b1515610a4b57600080fd5b610a5f8160026114ce90919063ffffffff16565b50565b60088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610af85780601f10610acd57610100808354040283529160200191610af8565b820191906000526020600020905b815481529060010190602001808311610adb57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5c57600080fd5b601260019054906101000a900460ff16151515610b7857600080fd5b610b806108a0565b1515610b8b57600080fd5b610b948161152c565b6001601260016101000a81548160ff0219169083151502179055507f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c3a57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610cf982600261166390919063ffffffff16565b9050919050565b60098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d965780601f10610d6b57610100808354040283529160200191610d96565b820191906000526020600020905b815481529060010190602001808311610d7957829003601f168201915b505050505081565b6000600554600f541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e2f57600080fd5b60006006811115610e3c57fe5b6000610e46611423565b815481101515610e5257fe5b906000526020600020906006020160000160009054906101000a900460ff166006811115610e7c57fe5b1480610ed2575060026006811115610e9057fe5b6000610e9a611423565b815481101515610ea657fe5b906000526020600020906006020160000160009054906101000a900460ff166006811115610ed057fe5b145b1515610edd57600080fd5b610ef18160026116bc90919063ffffffff16565b50565b60008060008090505b610f05611423565b81111515610f4f57610f40600082815481101515610f1f57fe5b9060005260206000209060060201600301548361171a90919063ffffffff16565b91508080600101915050610efd565b819250505090565b600080610f62611423565b815481101515610f6e57fe5b906000526020600020906006020160040154905090565b6000806000815481101515610f9657fe5b906000526020600020906006020160010154421015905090565b6000610fba610f85565b1515610fc557600080fd5b610fcd6108a0565b151515610fd957600080fd5b6000610fe3611423565b815481101515610fef57fe5b906000526020600020906006020160050160009054906101000a900460ff16151561101957600080fd5b6001600681111561102657fe5b61102e611052565b600681111561103957fe5b141561104957600a54905061104f565b600c5490505b90565b60008061105d611423565b81548110151561106957fe5b906000526020600020906006020160000160009054906101000a900460ff16905090565b60115481565b60008060006110a0610f85565b15156110ab57600080fd5b6110b36108a0565b1515156110bf57600080fd5b60006110c9611423565b8154811015156110d557fe5b906000526020600020906006020160050160009054906101000a900460ff1615156110ff57600080fd5b34915061110b82611736565b9050611118848383611775565b6111238483836118f9565b61112d84826119c9565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a35050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111fd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561123957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561135557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561139157600080fd5b600081141515156113a157600080fd5b600f5481111515156113b257600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156113f8573d6000803e3d6000fd5b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061142e610f85565b151561143957600080fd5b6114416108a0565b15151561144d57600080fd5b600090505b6000805490508110156114c95760008181548110151561146e57fe5b90600052602060002090600602016001015442101580156114af575060008181548110151561149957fe5b9060005260206000209060060201600201544211155b156114bc578091506114ca565b8080600101915050611452565b5b5090565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600281111561153957fe5b601260009054906101000a900460ff16600281111561155457fe5b14151561156057600080fd5b801561163b576002601260006101000a81548160ff0219169083600281111561158557fe5b0217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015611609573d6000803e3d6000fd5b507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1611660565b6001601260006101000a81548160ff0219169083600281111561165a57fe5b02179055505b50565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000818301905082811015151561172d57fe5b80905092915050565b600080611741610f57565b905061176d600754600a0a61175f8386611ace90919063ffffffff16565b611b0690919063ffffffff16565b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156117b157600080fd5b600082141515156117c157600080fd5b6117c9610ef4565b6117de8260115461171a90919063ffffffff16565b111515156117eb57600080fd5b6117f3610fb0565b61184583601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461171a90919063ffffffff16565b1015151561185257600080fd5b61185a6107fe565b6118ac83601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461171a90919063ffffffff16565b111515156118b957600080fd5b600160068111156118c657fe5b6118ce611052565b60068111156118d957fe5b14156118f4576118e883610ce3565b15156118f357600080fd5b5b505050565b61194b82601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461171a90919063ffffffff16565b601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119a38160115461171a90919063ffffffff16565b6011819055506119be82600f5461171a90919063ffffffff16565b600f81905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611a8e57600080fd5b505af1158015611aa2573d6000803e3d6000fd5b505050506040513d6020811015611ab857600080fd5b8101908080519060200190929190505050505050565b600080831415611ae15760009050611b00565b8183029050818382811515611af257fe5b04141515611afc57fe5b8090505b92915050565b60008183811515611b1357fe5b049050929150505600a165627a7a723058207f976191ce69f8802ed5965356b6181782c947dcb64459e6563ddf182d12d4cb0029",
  "deployedBytecode": "0x60806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306c36581146101645780631515bc2b1461018f57806318160ddd146101be578063301df9dd146101e9578063313ce567146102145780634042b66f1461023f57806340582f131461026a578063521eb2731461029557806353fe21ad146102ec5780636c02a9311461032f5780636c9789b0146103bf578063715018a6146103ee578063792d7ec3146104055780637b61c320146104605780637d3d6522146104f05780638da5cb5b1461051f5780639fb160aa146105765780639fc2e24f146105b9578063bbe8a466146105e4578063be8eef8e1461060f578063ce7f3a271461063e578063d679677a14610669578063e184a515146106a2578063ec8ac4d8146106cd578063f2fde38b14610717578063f3fef3a31461075a578063fc0c546a146107a7575b600080fd5b34801561017057600080fd5b506101796107fe565b6040518082815260200191505060405180910390f35b34801561019b57600080fd5b506101a46108a0565b604051808215151515815260200191505060405180910390f35b3480156101ca57600080fd5b506101d36108d1565b6040518082815260200191505060405180910390f35b3480156101f557600080fd5b506101fe6108d7565b6040518082815260200191505060405180910390f35b34801561022057600080fd5b50610229610905565b6040518082815260200191505060405180910390f35b34801561024b57600080fd5b5061025461090b565b6040518082815260200191505060405180910390f35b34801561027657600080fd5b5061027f610911565b6040518082815260200191505060405180910390f35b3480156102a157600080fd5b506102aa61091b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f857600080fd5b5061032d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610941565b005b34801561033b57600080fd5b50610344610a62565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610384578082015181840152602081019050610369565b50505050905090810190601f1680156103b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103cb57600080fd5b506103ec600480360381019080803515159060200190929190505050610b00565b005b3480156103fa57600080fd5b50610403610bde565b005b34801561041157600080fd5b50610446600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce3565b604051808215151515815260200191505060405180910390f35b34801561046c57600080fd5b50610475610d00565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104b557808201518184015260208101905061049a565b50505050905090810190601f1680156104e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104fc57600080fd5b50610505610d9e565b604051808215151515815260200191505060405180910390f35b34801561052b57600080fd5b50610534610dad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058257600080fd5b506105b7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd3565b005b3480156105c557600080fd5b506105ce610ef4565b6040518082815260200191505060405180910390f35b3480156105f057600080fd5b506105f9610f57565b6040518082815260200191505060405180910390f35b34801561061b57600080fd5b50610624610f85565b604051808215151515815260200191505060405180910390f35b34801561064a57600080fd5b50610653610fb0565b6040518082815260200191505060405180910390f35b34801561067557600080fd5b5061067e611052565b6040518082600681111561068e57fe5b60ff16815260200191505060405180910390f35b3480156106ae57600080fd5b506106b761108d565b6040518082815260200191505060405180910390f35b610701600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611093565b6040518082815260200191505060405180910390f35b34801561072357600080fd5b50610758600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a1565b005b34801561076657600080fd5b506107a5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112f9565b005b3480156107b357600080fd5b506107bc6113fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000610808610f85565b151561081357600080fd5b61081b6108a0565b15151561082757600080fd5b6000610831611423565b81548110151561083d57fe5b906000526020600020906006020160050160009054906101000a900460ff16151561086757600080fd5b6001600681111561087457fe5b61087c611052565b600681111561088757fe5b141561089757600b54905061089d565b600d5490505b90565b6000806001600080549050038154811015156108b857fe5b9060005260206000209060060201600201544211905090565b60065481565b6000806108e2611423565b8154811015156108ee57fe5b906000526020600020906006020160030154905090565b60075481565b600f5481565b6000600f54905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099d57600080fd5b600060068111156109aa57fe5b60006109b4611423565b8154811015156109c057fe5b906000526020600020906006020160000160009054906101000a900460ff1660068111156109ea57fe5b1480610a405750600260068111156109fe57fe5b6000610a08611423565b815481101515610a1457fe5b906000526020600020906006020160000160009054906101000a900460ff166006811115610a3e57fe5b145b1515610a4b57600080fd5b610a5f8160026114ce90919063ffffffff16565b50565b60088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610af85780601f10610acd57610100808354040283529160200191610af8565b820191906000526020600020905b815481529060010190602001808311610adb57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5c57600080fd5b601260019054906101000a900460ff16151515610b7857600080fd5b610b806108a0565b1515610b8b57600080fd5b610b948161152c565b6001601260016101000a81548160ff0219169083151502179055507f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c3a57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610cf982600261166390919063ffffffff16565b9050919050565b60098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d965780601f10610d6b57610100808354040283529160200191610d96565b820191906000526020600020905b815481529060010190602001808311610d7957829003601f168201915b505050505081565b6000600554600f541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e2f57600080fd5b60006006811115610e3c57fe5b6000610e46611423565b815481101515610e5257fe5b906000526020600020906006020160000160009054906101000a900460ff166006811115610e7c57fe5b1480610ed2575060026006811115610e9057fe5b6000610e9a611423565b815481101515610ea657fe5b906000526020600020906006020160000160009054906101000a900460ff166006811115610ed057fe5b145b1515610edd57600080fd5b610ef18160026116bc90919063ffffffff16565b50565b60008060008090505b610f05611423565b81111515610f4f57610f40600082815481101515610f1f57fe5b9060005260206000209060060201600301548361171a90919063ffffffff16565b91508080600101915050610efd565b819250505090565b600080610f62611423565b815481101515610f6e57fe5b906000526020600020906006020160040154905090565b6000806000815481101515610f9657fe5b906000526020600020906006020160010154421015905090565b6000610fba610f85565b1515610fc557600080fd5b610fcd6108a0565b151515610fd957600080fd5b6000610fe3611423565b815481101515610fef57fe5b906000526020600020906006020160050160009054906101000a900460ff16151561101957600080fd5b6001600681111561102657fe5b61102e611052565b600681111561103957fe5b141561104957600a54905061104f565b600c5490505b90565b60008061105d611423565b81548110151561106957fe5b906000526020600020906006020160000160009054906101000a900460ff16905090565b60115481565b60008060006110a0610f85565b15156110ab57600080fd5b6110b36108a0565b1515156110bf57600080fd5b60006110c9611423565b8154811015156110d557fe5b906000526020600020906006020160050160009054906101000a900460ff1615156110ff57600080fd5b34915061110b82611736565b9050611118848383611775565b6111238483836118f9565b61112d84826119c9565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a35050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111fd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561123957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561135557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561139157600080fd5b600081141515156113a157600080fd5b600f5481111515156113b257600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156113f8573d6000803e3d6000fd5b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061142e610f85565b151561143957600080fd5b6114416108a0565b15151561144d57600080fd5b600090505b6000805490508110156114c95760008181548110151561146e57fe5b90600052602060002090600602016001015442101580156114af575060008181548110151561149957fe5b9060005260206000209060060201600201544211155b156114bc578091506114ca565b8080600101915050611452565b5b5090565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600281111561153957fe5b601260009054906101000a900460ff16600281111561155457fe5b14151561156057600080fd5b801561163b576002601260006101000a81548160ff0219169083600281111561158557fe5b0217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015611609573d6000803e3d6000fd5b507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1611660565b6001601260006101000a81548160ff0219169083600281111561165a57fe5b02179055505b50565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000818301905082811015151561172d57fe5b80905092915050565b600080611741610f57565b905061176d600754600a0a61175f8386611ace90919063ffffffff16565b611b0690919063ffffffff16565b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156117b157600080fd5b600082141515156117c157600080fd5b6117c9610ef4565b6117de8260115461171a90919063ffffffff16565b111515156117eb57600080fd5b6117f3610fb0565b61184583601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461171a90919063ffffffff16565b1015151561185257600080fd5b61185a6107fe565b6118ac83601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461171a90919063ffffffff16565b111515156118b957600080fd5b600160068111156118c657fe5b6118ce611052565b60068111156118d957fe5b14156118f4576118e883610ce3565b15156118f357600080fd5b5b505050565b61194b82601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461171a90919063ffffffff16565b601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119a38160115461171a90919063ffffffff16565b6011819055506119be82600f5461171a90919063ffffffff16565b600f81905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611a8e57600080fd5b505af1158015611aa2573d6000803e3d6000fd5b505050506040513d6020811015611ab857600080fd5b8101908080519060200190929190505050505050565b600080831415611ae15760009050611b00565b8183029050818382811515611af257fe5b04141515611afc57fe5b8090505b92915050565b60008183811515611b1357fe5b049050929150505600a165627a7a723058207f976191ce69f8802ed5965356b6181782c947dcb64459e6563ddf182d12d4cb0029",
  "sourceMap": "203:1743:9:-;;;563:10:18;555:5;;:18;;;;;;;;;;;;;;;;;;203:1743:9;;;;;;",
  "deployedSourceMap": "203:1743:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:269:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5122:269:7;;;;;;;;;;;;;;;;;;;;;;;4539:110:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4539:110:13;;;;;;;;;;;;;;;;;;;;;;;;;;;787:26:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;787:26:7;;;;;;;;;;;;;;;;;;;;;;;3262:121:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3262:121:13;;;;;;;;;;;;;;;;;;;;;;;819:23:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;819:23:7;;;;;;;;;;;;;;;;;;;;;;;1072:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1072:24:7;;;;;;;;;;;;;;;;;;;;;;;6046:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6046:86:7;;;;;;;;;;;;;;;;;;;;;;;725:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;725:21:7;;;;;;;;;;;;;;;;;;;;;;;;;;;602:97:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:97:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:23:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;848:23:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;848:23:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:214:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;933:214:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:111:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1150:111:18;;;;;;1245:101:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1245:101:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:25:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;877:25:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;877:25:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:98:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:98:9;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;;908:105:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;908:105:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;3699:275:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3699:275:13;;;;;;;;;;;;;;;;;;;;;;;4137:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4137:129:13;;;;;;;;;;;;;;;;;;;;;;;4353:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4353:99:13;;;;;;;;;;;;;;;;;;;;;;;;;;;4564:269:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4564:269:7;;;;;;;;;;;;;;;;;;;;;;;2922:107:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2922:107:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:28:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:28:7;;;;;;;;;;;;;;;;;;;;;;;1512:524;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:174:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:174:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;6466:233:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6466:233:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;697:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:21:7;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:269;5221:7;5044:11:13;:9;:11::i;:::-;5036:20;;;;;;;;5225:11;:9;:11::i;:::-;5224:12;5216:21;;;;;;;;5404:5;5410:12;:10;:12::i;:::-;5404:19;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;5396:44;;;;;;;;5261:17:7;5244:34;;;;;;;;:13;:11;:13::i;:::-;:34;;;;;;;;;5240:145;;;5301:19;;5294:26;;;;5240:145;5358:16;;5351:23;;5451:1:13;5122:269:7;:::o;4539:110:13:-;4581:4;4612:5;4631:1;4618:5;:12;;;;:14;4612:21;;;;;;;;;;;;;;;;;;;;:28;;;4606:3;:34;4598:43;;4539:110;:::o;787:26:7:-;;;;:::o;3262:121:13:-;3313:7;3340:5;3346:12;:10;:12::i;:::-;3340:19;;;;;;;;;;;;;;;;;;;;:35;;;3333:42;;3262:121;:::o;819:23:7:-;;;;:::o;1072:24::-;;;;:::o;6046:86::-;6090:7;6116:9;;6109:16;;6046:86;:::o;725:21::-;;;;;;;;;;;;;:::o;602:97:15:-;707:5:18;;;;;;;;;;;693:19;;:10;:19;;;685:28;;;;;;;;5660:23:13;5631:52;;;;;;;;:5;5637:12;:10;:12::i;:::-;5631:19;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:52;;;;;;;;;:118;;;;5729:20;5700:49;;;;;;;;:5;5706:12;:10;:12::i;:::-;5700:19;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:49;;;;;;;;;5631:118;5609:141;;;;;;;;680:11:15;687:3;680:2;:6;;:11;;;;:::i;:::-;602:97;:::o;848:23:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;933:214:9:-;707:5:18;;;;;;;;;;;693:19;;:10;:19;;;685:28;;;;;;;;1005:11:9;;;;;;;;;;;1004:12;996:21;;;;;;;;1036:11;:9;:11::i;:::-;1028:20;;;;;;;;1059:24;1072:10;1059:12;:24::i;:::-;1108:4;1094:11;;:18;;;;;;;;;;;;;;;;;;1128:11;;;;;;;;;;933:214;:::o;1150:111:18:-;707:5;;;;;;;;;;;693:19;;:10;:19;;;685:28;;;;;;;;1226:5;;;;;;;;;;;1207:25;;;;;;;;;;;;1254:1;1238:5;;:18;;;;;;;;;;;;;;;;;;1150:111::o;1245:101:15:-;1304:4;1327:11;1334:3;1327:2;:6;;:11;;;;:::i;:::-;1320:18;;1245:101;;;:::o;877:25:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;533:98:9:-;576:4;613:10;;600:9;;:23;;593:30;;533:98;:::o;238:20:18:-;;;;;;;;;;;;;:::o;908:105:15:-;707:5:18;;;;;;;;;;;693:19;;:10;:19;;;685:28;;;;;;;;5660:23:13;5631:52;;;;;;;;:5;5637:12;:10;:12::i;:::-;5631:19;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:52;;;;;;;;;:118;;;;5729:20;5700:49;;;;;;;;:5;5706:12;:10;:12::i;:::-;5700:19;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:49;;;;;;;;;5631:118;5609:141;;;;;;;;991:14:15;1001:3;991:2;:9;;:14;;;;:::i;:::-;908:105;:::o;3699:275:13:-;3758:7;3778:20;3814:9;3826:1;3814:13;;3809:128;3834:12;:10;:12::i;:::-;3829:1;:17;;3809:128;;;3883:42;3900:5;3906:1;3900:8;;;;;;;;;;;;;;;;;;;;:24;;;3883:12;:16;;:42;;;;:::i;:::-;3868:57;;3848:3;;;;;;;3809:128;;;3954:12;3947:19;;3699:275;;;:::o;4137:129::-;4196:7;4223:5;4229:12;:10;:12::i;:::-;4223:19;;;;;;;;;;;;;;;;;;;;:35;;;4216:42;;4137:129;:::o;4353:99::-;4395:4;4427:5;4433:1;4427:8;;;;;;;;;;;;;;;;;;;;:16;;;4420:3;:23;;4412:32;;4353:99;:::o;4564:269:7:-;4663:7;5044:11:13;:9;:11::i;:::-;5036:20;;;;;;;;5225:11;:9;:11::i;:::-;5224:12;5216:21;;;;;;;;5404:5;5410:12;:10;:12::i;:::-;5404:19;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;5396:44;;;;;;;;4703:17:7;4686:34;;;;;;;;:13;:11;:13::i;:::-;:34;;;;;;;;;4682:145;;;4743:19;;4736:26;;;;4682:145;4800:16;;4793:23;;5451:1:13;4564:269:7;:::o;2922:107:13:-;2966:10;2996:5;3002:12;:10;:12::i;:::-;2996:19;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2989:32;;2922:107;:::o;1149:28:7:-;;;;:::o;1512:524::-;1656:7;1679:17;1718;5044:11:13;:9;:11::i;:::-;5036:20;;;;;;;;5225:11;:9;:11::i;:::-;5224:12;5216:21;;;;;;;;5404:5;5410:12;:10;:12::i;:::-;5404:19;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;5396:44;;;;;;;;1699:9:7;1679:29;;1738:26;1754:9;1738:15;:26::i;:::-;1718:46;;1775:56;1796:12;1810:9;1821;1775:20;:56::i;:::-;1842:58;1865:12;1879:9;1890;1842:22;:58::i;:::-;1911:41;1928:12;1942:9;1911:16;:41::i;:::-;1994:12;1968:61;;1982:10;1968:61;;;2008:9;2019;1968:61;;;;;;;;;;;;;;;;;;;;;;;;1512:524;;;;;:::o;886:174:18:-;707:5;;;;;;;;;;;693:19;;:10;:19;;;685:28;;;;;;;;982:1;962:22;;:8;:22;;;;954:31;;;;;;;;1024:8;996:37;;1017:5;;;;;;;;;;;996:37;;;;;;;;;;;;1047:8;1039:5;;:16;;;;;;;;;;;;;;;;;;886:174;:::o;6466:233:7:-;707:5:18;;;;;;;;;;;693:19;;:10;:19;;;685:28;;;;;;;;6575:1:7;6556:21;;:7;:21;;;;6548:30;;;;;;;;6610:1;6596:10;:15;;6588:24;;;;;;;;6644:9;;6630:10;:23;;6622:32;;;;;;;;6664:7;:16;;:28;6681:10;6664:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6664:28:7;6466:233;;:::o;697:21::-;;;;;;;;;;;;;:::o;2545:276:13:-;2627:7;2652:9;5044:11;:9;:11::i;:::-;5036:20;;;;;;;;5225:11;:9;:11::i;:::-;5224:12;5216:21;;;;;;;;2664:1;2652:13;;2647:167;2671:5;:12;;;;2667:1;:16;2647:167;;;2716:5;2722:1;2716:8;;;;;;;;;;;;;;;;;;;;:16;;;2709:3;:23;;:49;;;;;2743:5;2749:1;2743:8;;;;;;;;;;;;;;;;;;;;:15;;;2736:3;:22;;2709:49;2705:98;;;2786:1;2779:8;;;;2705:98;2685:3;;;;;;;2647:167;;;5248:1;2545:276;;:::o;128:113:20:-;229:4;204:5;:12;;:22;217:8;204:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;128:113;;:::o;1636:307:9:-;1712:12;1703:21;;;;;;;;:5;;;;;;;;;;;:21;;;;;;;;;1695:30;;;;;;;;1740:10;1736:200;;;1775:12;1767:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;1802:6;;;;;;;;;;;:15;;:38;1826:4;1818:21;;;1802:38;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1802:38:9;1860:8;;;;;;;;;;1736:200;;;1909:15;1901:5;;:23;;;;;;;;;;;;;;;;;;;;;;;;1736:200;1636:307;:::o;374:133:20:-;453:4;477:5;:12;;:22;490:8;477:22;;;;;;;;;;;;;;;;;;;;;;;;;470:29;;374:133;;;;:::o;249:117::-;353:5;328;:12;;:22;341:8;328:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;249:117;;:::o;1008:123:1:-;1066:9;1091:1;1087;:5;1083:9;;1110:1;1105;:6;;1098:14;;;;;;1125:1;1118:8;;1008:123;;;;:::o;5694:216:7:-;5762:7;5781:23;5807:28;:26;:28::i;:::-;5781:54;;5852:51;5894:8;;5888:2;:14;5852:31;5867:15;5852:10;:14;;:31;;;;:::i;:::-;:35;;:51;;;;:::i;:::-;5845:58;;5694:216;;;;:::o;2691:548::-;2841:1;2817:26;;:12;:26;;;;2809:35;;;;;;;;2876:1;2862:10;:15;;2854:24;;;;;;;;2931:28;:26;:28::i;:::-;2896:31;2914:12;2896:13;;:17;;:31;;;;:::i;:::-;:63;;2888:72;;;;;;;;3024:15;:13;:15::i;:::-;2978:42;3009:10;2978:12;:26;2991:12;2978:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;:61;;2970:70;;;;;;;;3104:15;:13;:15::i;:::-;3058:42;3089:10;3058:12;:26;3071:12;3058:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;:61;;3050:70;;;;;;;;3151:17;3134:34;;;;;;;;:13;:11;:13::i;:::-;:34;;;;;;;;;3130:103;;;3192:29;3208:12;3192:15;:29::i;:::-;3184:38;;;;;;;;3130:103;2691:548;;;:::o;3980:297::-;4124:42;4155:10;4124:12;:26;4137:12;4124:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;4095:12;:26;4108:12;4095:26;;;;;;;;;;;;;;;:71;;;;4192:31;4210:12;4192:13;;:17;;:31;;;;:::i;:::-;4176:13;:47;;;;4245:25;4259:10;4245:9;;:13;;:25;;;;:::i;:::-;4233:9;:37;;;;3980:297;;;:::o;3443:138::-;3532:5;;;;;;;;;;;:14;;;3547:12;3561;3532:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3532:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3532:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3532:42:7;;;;;;;;;;;;;;;;;3443:138;;:::o;203:167:1:-;261:9;287:1;282;:6;278:35;;;305:1;298:8;;;;278:35;326:1;322;:5;318:9;;349:1;344;340;:5;;;;;;;;:10;333:18;;;;;;364:1;357:8;;203:167;;;;;:::o;452:272::-;510:7;718:1;714;:5;;;;;;;;707:12;;452:272;;;;:::o",
  "source": "pragma solidity ^0.4.23;\r\n\r\nimport \"./BasicCrowdsale.sol\";\r\n\r\n/**\r\n * @title FinalizableCrowdsale\r\n * @dev FinalizableCrowdsale inherits BasicCrowdsale and intended to manage finalization process.\r\n */\r\ncontract FinalizableCrowdsale is BasicCrowdsale {\r\n    enum State {Active, Refunding, Closed}\r\n    State state;   \r\n    bool isFinalized;\r\n    \r\n    event Finalized();\r\n    event Closed();\r\n\r\n    /**\r\n     * @dev Checks if softcap goal is reached.\r\n     * @return A bool showing whether the softcap goal is reached.\r\n     */\r\n    function goalReached() public view returns(bool) {\r\n        return weiRaised >= softcapWei;\r\n    }\r\n\r\n    /**\r\n     * @dev Finalizes the ICO.\r\n     * @dev note Only owner is allowed to finalizing the crowdsale.\r\n     * @dev note Only when the crowdsale is reached to its ending, finalization is allowed.\r\n     * @param toBeClosed A bool determines crowdsale must be colsed or refunded.\r\n     */\r\n    function finalize(bool toBeClosed) public onlyOwner {\r\n        require(!isFinalized);\r\n        require(hasClosed());\r\n        finalization(toBeClosed);\r\n        isFinalized = true;\r\n        emit Finalized();\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function executes the finalization process.\r\n     * @dev note If the softcap goal is reached this action would change the crowdsale state to 'Closed' state.\r\n     * @dev note If the desired softcap goal is not raised this action would change the crowdsale state to 'Rfunding' state.\r\n     * and since then every participant could refund his/her invests back.\r\n     * @param toBeClosed A bool determines crowdsale must be colsed or refunded.\r\n     */\r\n    function finalization(bool toBeClosed) internal {\r\n        require(state == State.Active);\r\n        if (toBeClosed) {\r\n            state = State.Closed;\r\n            wallet.transfer(address(this).balance);\r\n            emit Closed();\r\n        } else {\r\n            state = State.Refunding;\r\n        }\r\n    }\r\n}",
  "sourcePath": "G:\\Root\\Blockchain\\WOX\\contracts\\crowdSale\\FinalizableCrowdsale.sol",
  "ast": {
    "absolutePath": "/G/Root/Blockchain/WOX/contracts/crowdSale/FinalizableCrowdsale.sol",
    "exportedSymbols": {
      "FinalizableCrowdsale": [
        2219
      ]
    },
    "id": 2220,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2125,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/G/Root/Blockchain/WOX/contracts/crowdSale/BasicCrowdsale.sol",
        "file": "./BasicCrowdsale.sol",
        "id": 2126,
        "nodeType": "ImportDirective",
        "scope": 2220,
        "sourceUnit": 2087,
        "src": "28:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2127,
              "name": "BasicCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2086,
              "src": "236:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicCrowdsale_$2086",
                "typeString": "contract BasicCrowdsale"
              }
            },
            "id": 2128,
            "nodeType": "InheritanceSpecifier",
            "src": "236:14:9"
          }
        ],
        "contractDependencies": [
          2086,
          2924,
          3575,
          3949
        ],
        "contractKind": "contract",
        "documentation": "@title FinalizableCrowdsale\r\n@dev FinalizableCrowdsale inherits BasicCrowdsale and intended to manage finalization process.\r",
        "fullyImplemented": true,
        "id": 2219,
        "linearizedBaseContracts": [
          2219,
          2086,
          3575,
          3949,
          2924
        ],
        "name": "FinalizableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "FinalizableCrowdsale.State",
            "id": 2132,
            "members": [
              {
                "id": 2129,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "270:6:9"
              },
              {
                "id": 2130,
                "name": "Refunding",
                "nodeType": "EnumValue",
                "src": "278:9:9"
              },
              {
                "id": 2131,
                "name": "Closed",
                "nodeType": "EnumValue",
                "src": "289:6:9"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "258:38:9"
          },
          {
            "constant": false,
            "id": 2134,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "scope": 2219,
            "src": "302:11:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$2132",
              "typeString": "enum FinalizableCrowdsale.State"
            },
            "typeName": {
              "contractScope": null,
              "id": 2133,
              "name": "State",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2132,
              "src": "302:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$2132",
                "typeString": "enum FinalizableCrowdsale.State"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2136,
            "name": "isFinalized",
            "nodeType": "VariableDeclaration",
            "scope": 2219,
            "src": "323:16:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2135,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "323:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2138,
            "name": "Finalized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:2:9"
            },
            "src": "352:18:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2140,
            "name": "Closed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "388:2:9"
            },
            "src": "376:15:9"
          },
          {
            "body": {
              "id": 2149,
              "nodeType": "Block",
              "src": "582:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "weiRaised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1783,
                      "src": "600:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2146,
                      "name": "softcapWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "613:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "600:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2144,
                  "id": 2148,
                  "nodeType": "Return",
                  "src": "593:30:9"
                }
              ]
            },
            "documentation": "@dev Checks if softcap goal is reached.\r\n@return A bool showing whether the softcap goal is reached.\r",
            "id": 2150,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "goalReached",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2150,
                  "src": "576:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:6:9"
            },
            "scope": 2219,
            "src": "533:98:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2178,
              "nodeType": "Block",
              "src": "985:162:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1004:12:9",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2158,
                          "name": "isFinalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2136,
                          "src": "1005:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4450,
                        4451
                      ],
                      "referencedDeclaration": 4450,
                      "src": "996:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2161,
                  "nodeType": "ExpressionStatement",
                  "src": "996:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2163,
                          "name": "hasClosed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2855,
                          "src": "1036:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1036:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4450,
                        4451
                      ],
                      "referencedDeclaration": 4450,
                      "src": "1028:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1028:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:20:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2168,
                        "name": "toBeClosed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "1072:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2167,
                      "name": "finalization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2218,
                      "src": "1059:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2170,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:24:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2171,
                      "name": "isFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2136,
                      "src": "1094:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1108:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1094:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2174,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:18:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2175,
                      "name": "Finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2138,
                      "src": "1128:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2177,
                  "nodeType": "EmitStatement",
                  "src": "1123:16:9"
                }
              ]
            },
            "documentation": "@dev Finalizes the ICO.\r\n@dev note Only owner is allowed to finalizing the crowdsale.\r\n@dev note Only when the crowdsale is reached to its ending, finalization is allowed.\r\n@param toBeClosed A bool determines crowdsale must be colsed or refunded.\r",
            "id": 2179,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2155,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2154,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3907,
                  "src": "975:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "975:9:9"
              }
            ],
            "name": "finalize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2152,
                  "name": "toBeClosed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2179,
                  "src": "951:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:17:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:0:9"
            },
            "scope": 2219,
            "src": "933:214:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2217,
              "nodeType": "Block",
              "src": "1684:259:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2132",
                          "typeString": "enum FinalizableCrowdsale.State"
                        },
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2185,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2134,
                          "src": "1703:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2132",
                            "typeString": "enum FinalizableCrowdsale.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2186,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2132,
                            "src": "1712:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2132_$",
                              "typeString": "type(enum FinalizableCrowdsale.State)"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1712:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2132",
                            "typeString": "enum FinalizableCrowdsale.State"
                          }
                        },
                        "src": "1703:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4450,
                        4451
                      ],
                      "referencedDeclaration": 4450,
                      "src": "1695:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:30:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2191,
                    "name": "toBeClosed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2181,
                    "src": "1740:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2215,
                    "nodeType": "Block",
                    "src": "1886:50:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2210,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2134,
                            "src": "1901:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$2132",
                              "typeString": "enum FinalizableCrowdsale.State"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2211,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2132,
                              "src": "1909:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$2132_$",
                                "typeString": "type(enum FinalizableCrowdsale.State)"
                              }
                            },
                            "id": 2212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Refunding",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1909:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$2132",
                              "typeString": "enum FinalizableCrowdsale.State"
                            }
                          },
                          "src": "1901:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2132",
                            "typeString": "enum FinalizableCrowdsale.State"
                          }
                        },
                        "id": 2214,
                        "nodeType": "ExpressionStatement",
                        "src": "1901:23:9"
                      }
                    ]
                  },
                  "id": 2216,
                  "nodeType": "IfStatement",
                  "src": "1736:200:9",
                  "trueBody": {
                    "id": 2209,
                    "nodeType": "Block",
                    "src": "1752:128:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2192,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2134,
                            "src": "1767:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$2132",
                              "typeString": "enum FinalizableCrowdsale.State"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2193,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2132,
                              "src": "1775:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$2132_$",
                                "typeString": "type(enum FinalizableCrowdsale.State)"
                              }
                            },
                            "id": 2194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Closed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1775:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$2132",
                              "typeString": "enum FinalizableCrowdsale.State"
                            }
                          },
                          "src": "1767:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2132",
                            "typeString": "enum FinalizableCrowdsale.State"
                          }
                        },
                        "id": 2196,
                        "nodeType": "ExpressionStatement",
                        "src": "1767:20:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2201,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4488,
                                    "src": "1826:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_FinalizableCrowdsale_$2219",
                                      "typeString": "contract FinalizableCrowdsale"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_FinalizableCrowdsale_$2219",
                                      "typeString": "contract FinalizableCrowdsale"
                                    }
                                  ],
                                  "id": 2200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1818:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 2202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1818:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1818:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2197,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "1802:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1802:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1802:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2205,
                        "nodeType": "ExpressionStatement",
                        "src": "1802:38:9"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2206,
                            "name": "Closed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2140,
                            "src": "1860:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1860:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2208,
                        "nodeType": "EmitStatement",
                        "src": "1855:13:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Internal function executes the finalization process.\r\n@dev note If the softcap goal is reached this action would change the crowdsale state to 'Closed' state.\r\n@dev note If the desired softcap goal is not raised this action would change the crowdsale state to 'Rfunding' state.\r\nand since then every participant could refund his/her invests back.\r\n@param toBeClosed A bool determines crowdsale must be colsed or refunded.\r",
            "id": 2218,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2181,
                  "name": "toBeClosed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2218,
                  "src": "1658:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:17:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1684:0:9"
            },
            "scope": 2219,
            "src": "1636:307:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2220,
        "src": "203:1743:9"
      }
    ],
    "src": "0:1946:9"
  },
  "legacyAST": {
    "absolutePath": "/G/Root/Blockchain/WOX/contracts/crowdSale/FinalizableCrowdsale.sol",
    "exportedSymbols": {
      "FinalizableCrowdsale": [
        2219
      ]
    },
    "id": 2220,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2125,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/G/Root/Blockchain/WOX/contracts/crowdSale/BasicCrowdsale.sol",
        "file": "./BasicCrowdsale.sol",
        "id": 2126,
        "nodeType": "ImportDirective",
        "scope": 2220,
        "sourceUnit": 2087,
        "src": "28:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2127,
              "name": "BasicCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2086,
              "src": "236:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicCrowdsale_$2086",
                "typeString": "contract BasicCrowdsale"
              }
            },
            "id": 2128,
            "nodeType": "InheritanceSpecifier",
            "src": "236:14:9"
          }
        ],
        "contractDependencies": [
          2086,
          2924,
          3575,
          3949
        ],
        "contractKind": "contract",
        "documentation": "@title FinalizableCrowdsale\r\n@dev FinalizableCrowdsale inherits BasicCrowdsale and intended to manage finalization process.\r",
        "fullyImplemented": true,
        "id": 2219,
        "linearizedBaseContracts": [
          2219,
          2086,
          3575,
          3949,
          2924
        ],
        "name": "FinalizableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "FinalizableCrowdsale.State",
            "id": 2132,
            "members": [
              {
                "id": 2129,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "270:6:9"
              },
              {
                "id": 2130,
                "name": "Refunding",
                "nodeType": "EnumValue",
                "src": "278:9:9"
              },
              {
                "id": 2131,
                "name": "Closed",
                "nodeType": "EnumValue",
                "src": "289:6:9"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "258:38:9"
          },
          {
            "constant": false,
            "id": 2134,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "scope": 2219,
            "src": "302:11:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$2132",
              "typeString": "enum FinalizableCrowdsale.State"
            },
            "typeName": {
              "contractScope": null,
              "id": 2133,
              "name": "State",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2132,
              "src": "302:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$2132",
                "typeString": "enum FinalizableCrowdsale.State"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2136,
            "name": "isFinalized",
            "nodeType": "VariableDeclaration",
            "scope": 2219,
            "src": "323:16:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2135,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "323:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2138,
            "name": "Finalized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:2:9"
            },
            "src": "352:18:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2140,
            "name": "Closed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "388:2:9"
            },
            "src": "376:15:9"
          },
          {
            "body": {
              "id": 2149,
              "nodeType": "Block",
              "src": "582:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "weiRaised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1783,
                      "src": "600:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2146,
                      "name": "softcapWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "613:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "600:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2144,
                  "id": 2148,
                  "nodeType": "Return",
                  "src": "593:30:9"
                }
              ]
            },
            "documentation": "@dev Checks if softcap goal is reached.\r\n@return A bool showing whether the softcap goal is reached.\r",
            "id": 2150,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "goalReached",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2150,
                  "src": "576:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:6:9"
            },
            "scope": 2219,
            "src": "533:98:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2178,
              "nodeType": "Block",
              "src": "985:162:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1004:12:9",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2158,
                          "name": "isFinalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2136,
                          "src": "1005:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4450,
                        4451
                      ],
                      "referencedDeclaration": 4450,
                      "src": "996:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2161,
                  "nodeType": "ExpressionStatement",
                  "src": "996:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2163,
                          "name": "hasClosed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2855,
                          "src": "1036:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1036:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4450,
                        4451
                      ],
                      "referencedDeclaration": 4450,
                      "src": "1028:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1028:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:20:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2168,
                        "name": "toBeClosed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "1072:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2167,
                      "name": "finalization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2218,
                      "src": "1059:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2170,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:24:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2171,
                      "name": "isFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2136,
                      "src": "1094:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1108:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1094:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2174,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:18:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2175,
                      "name": "Finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2138,
                      "src": "1128:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2177,
                  "nodeType": "EmitStatement",
                  "src": "1123:16:9"
                }
              ]
            },
            "documentation": "@dev Finalizes the ICO.\r\n@dev note Only owner is allowed to finalizing the crowdsale.\r\n@dev note Only when the crowdsale is reached to its ending, finalization is allowed.\r\n@param toBeClosed A bool determines crowdsale must be colsed or refunded.\r",
            "id": 2179,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2155,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2154,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3907,
                  "src": "975:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "975:9:9"
              }
            ],
            "name": "finalize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2152,
                  "name": "toBeClosed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2179,
                  "src": "951:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:17:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:0:9"
            },
            "scope": 2219,
            "src": "933:214:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2217,
              "nodeType": "Block",
              "src": "1684:259:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2132",
                          "typeString": "enum FinalizableCrowdsale.State"
                        },
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2185,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2134,
                          "src": "1703:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2132",
                            "typeString": "enum FinalizableCrowdsale.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2186,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2132,
                            "src": "1712:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2132_$",
                              "typeString": "type(enum FinalizableCrowdsale.State)"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1712:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2132",
                            "typeString": "enum FinalizableCrowdsale.State"
                          }
                        },
                        "src": "1703:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4450,
                        4451
                      ],
                      "referencedDeclaration": 4450,
                      "src": "1695:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:30:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2191,
                    "name": "toBeClosed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2181,
                    "src": "1740:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2215,
                    "nodeType": "Block",
                    "src": "1886:50:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2210,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2134,
                            "src": "1901:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$2132",
                              "typeString": "enum FinalizableCrowdsale.State"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2211,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2132,
                              "src": "1909:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$2132_$",
                                "typeString": "type(enum FinalizableCrowdsale.State)"
                              }
                            },
                            "id": 2212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Refunding",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1909:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$2132",
                              "typeString": "enum FinalizableCrowdsale.State"
                            }
                          },
                          "src": "1901:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2132",
                            "typeString": "enum FinalizableCrowdsale.State"
                          }
                        },
                        "id": 2214,
                        "nodeType": "ExpressionStatement",
                        "src": "1901:23:9"
                      }
                    ]
                  },
                  "id": 2216,
                  "nodeType": "IfStatement",
                  "src": "1736:200:9",
                  "trueBody": {
                    "id": 2209,
                    "nodeType": "Block",
                    "src": "1752:128:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2192,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2134,
                            "src": "1767:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$2132",
                              "typeString": "enum FinalizableCrowdsale.State"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2193,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2132,
                              "src": "1775:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$2132_$",
                                "typeString": "type(enum FinalizableCrowdsale.State)"
                              }
                            },
                            "id": 2194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Closed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1775:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$2132",
                              "typeString": "enum FinalizableCrowdsale.State"
                            }
                          },
                          "src": "1767:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2132",
                            "typeString": "enum FinalizableCrowdsale.State"
                          }
                        },
                        "id": 2196,
                        "nodeType": "ExpressionStatement",
                        "src": "1767:20:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2201,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4488,
                                    "src": "1826:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_FinalizableCrowdsale_$2219",
                                      "typeString": "contract FinalizableCrowdsale"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_FinalizableCrowdsale_$2219",
                                      "typeString": "contract FinalizableCrowdsale"
                                    }
                                  ],
                                  "id": 2200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1818:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 2202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1818:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1818:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2197,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "1802:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1802:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1802:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2205,
                        "nodeType": "ExpressionStatement",
                        "src": "1802:38:9"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2206,
                            "name": "Closed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2140,
                            "src": "1860:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1860:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2208,
                        "nodeType": "EmitStatement",
                        "src": "1855:13:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Internal function executes the finalization process.\r\n@dev note If the softcap goal is reached this action would change the crowdsale state to 'Closed' state.\r\n@dev note If the desired softcap goal is not raised this action would change the crowdsale state to 'Rfunding' state.\r\nand since then every participant could refund his/her invests back.\r\n@param toBeClosed A bool determines crowdsale must be colsed or refunded.\r",
            "id": 2218,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2181,
                  "name": "toBeClosed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2218,
                  "src": "1658:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:17:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1684:0:9"
            },
            "scope": 2219,
            "src": "1636:307:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2220,
        "src": "203:1743:9"
      }
    ],
    "src": "0:1946:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-27T06:56:02.079Z"
}